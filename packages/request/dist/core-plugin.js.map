{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/request/src/core-plugin.ts","<<jsx-config-pragma.js>>"],"sourcesContent":["import { Plugin } from \"./plugin\";\nimport { ResponseError } from \"./response-error\";\nimport { Response } from \"./response\";\nimport { pickValid } from \"@m78/utils\";\n\n/** 在某些请求api(fetch)中，即使出现404/500依然会走resolve，通过此方法自行限定错误范围 */\nfunction checkResponseStatus(status: number) {\n  return status >= 200 && status < 300;\n}\n\n/** 核心插件，用于完成各种配置对应的基础功能 */\nexport class CorePlugin extends Plugin<any> {\n  before() {\n    const start = this.getCurrentOption(\"start\");\n\n    this.ctx._corePlugin = {\n      // 从返回、配置等提取出来的反馈信息\n      message: \"\",\n    };\n\n    this.ctx._corePlugin.startFlag = start?.(this.options);\n  }\n\n  finish(): void {\n    const finish = this.getCurrentOption(\"finish\");\n\n    finish?.(this.options, this.ctx._corePlugin.startFlag);\n  }\n\n  error(error: ResponseError): void {\n    const feedback = this.getCurrentOption(\"feedBack\");\n\n    /**\n     * 取错误消息进行反馈, 顺序为:\n     * 1. 根据messageField取服务器返回的错误提示消息\n     * 2. 根据statusCode生成错误消息\n     * 3. Error.message\n     * 4. 未知错误\n     * */\n    const errMessage = error.message;\n\n    /** 从服务器返回中取出的msg */\n    let serverMsg = \"\";\n\n    /** 根据服务器返回状态码获取的msg */\n    let statusMsg = \"\";\n\n    /** 包含response的内部错误 */\n    if (error.response) {\n      const { response } = error;\n      const messageField = this.getCurrentOption(\"messageField\");\n\n      if (response) {\n        const data = response.data;\n\n        if (data) {\n          serverMsg = data[messageField!];\n        }\n\n        statusMsg = error.response.message;\n      }\n    }\n\n    const finalMsg = pickValid(serverMsg, errMessage, statusMsg);\n\n    // 将Error对象的msg改为与反馈的msg一致\n    error.message = finalMsg;\n\n    const errorHook = this.getCurrentOption(\"error\");\n\n    errorHook?.(error, this.options);\n\n    if (!this.options.extraOption.quiet && feedback) {\n      feedback(finalMsg, false, this.options, error.response);\n    }\n  }\n\n  pipe(response: Response) {\n    const checkStatus = this.getCurrentOption(\"checkStatus\");\n    const serverMsgField = this.getCurrentOption(\"messageField\");\n\n    /**\n     * 提示消息, 取值顺序为:\n     * 1. 如果请求未失败, 且配置了extraOption.successMessage则直接使用\n     * 2. 通过serverMsgField拿到的服务器响应\n     * 3. 通过状态码匹配到的错误消息\n     * 4. 默认错误信息\n     * */\n    const message = pickValid(\n      response.data?.[serverMsgField!],\n      response.message,\n      `${response.code ? `${response.code}: ` : \"\"}请求异常`\n    );\n\n    this.ctx._corePlugin.message = message;\n\n    /** 如果包含status，将其视为http状态码并进行检查 */\n    if (!checkResponseStatus(response.code)) {\n      throw new ResponseError(message, response);\n    }\n\n    /** 通过配置的`checkStatus`检测服务器返回是否符合用户预期, 检测为false时抛出异常 */\n    if (checkStatus && response.data && !checkStatus(response.data)) {\n      throw new ResponseError(message, response);\n    }\n\n    const successMessage = this.options.extraOption.successMessage;\n\n    if (successMessage) {\n      this.ctx._corePlugin.message = successMessage;\n    }\n\n    return response;\n  }\n\n  success(data: any, response: Response) {\n    const extra = this.options.extraOption;\n    const success = this.getCurrentOption(\"success\");\n\n    /** 请求成功，且设置了feedback和useServeFeedBack，使用message进行反馈 */\n    if (!extra.quiet && (extra.useServeFeedBack || extra.successMessage)) {\n      const { message } = this.ctx._corePlugin;\n      const feedback = this.getCurrentOption(\"feedBack\");\n\n      feedback?.(message, true, this.options, response);\n    }\n\n    success?.(data, response, this.options);\n  }\n}\n","React.createElement"],"names":["Plugin","ResponseError","pickValid","checkResponseStatus","status","CorePlugin","before","start","getCurrentOption","ctx","_corePlugin","message","startFlag","options","finish","error","feedback","errMessage","serverMsg","statusMsg","response","messageField","data","finalMsg","errorHook","extraOption","quiet","pipe","checkStatus","serverMsgField","code","successMessage","success","extra","useServeFeedBack"],"mappings":"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"}