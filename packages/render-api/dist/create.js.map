{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/render-api/src/create.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\nimport { createEvent } from \"@m78/hooks\";\nimport {\n  AnyFunction,\n  createRandString,\n  defer,\n  getPortalsNode,\n  isFunction,\n  omit,\n} from \"@m78/utils\";\nimport ReactDom from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport {\n  RenderApiComponentInstance,\n  RenderApiInstance,\n  RenderApiOption,\n  _ComponentItem,\n  RenderApiComponentBaseProps,\n  RenderApiOmitBuiltState,\n} from \"./types\";\n\n// RenderApiInstance.setOption()的有效值\nconst updateOptionWhiteList = [\"defaultState\", \"wrap\", \"maxInstance\"];\n// RenderApiComponentProps.setState()的有效值onChange应动态从changeKey获取\nconst setStateWhiteList = [\"onDispose\", \"onUpdate\", \"instanceRef\"];\n\n/**\n * 接收配置并创建一个api实例\n * - S - 组件能够接收的状态, 对应实现组件的扩展props\n * - I - 组件扩展api\n * @param opt - 创建配置\n * */\nfunction create<S extends object, I = null>(\n  opt: RenderApiOption<S>\n): RenderApiInstance<S, I> {\n  const option = { ...opt };\n\n  // updateOptionWhiteList类的配置是可更改的, 必须在使用时实时获取\n  const {\n    component: Component,\n    namespace = \"RENDER__BOX\",\n    showKey = \"show\",\n    changeKey = \"onChange\",\n  } = option;\n\n  /** 对组件进行强缓存, 只允许在_updateFlag变更时更新 */\n  const MemoComponent = React.memo(\n    Component,\n    (prev, next) => prev._updateFlag === next._updateFlag\n  );\n\n  /** 实例长度变更 */\n  const changeEvent = createEvent();\n\n  /** 在内部共享的状态对象 */\n  const ctx = {\n    list: [] as _ComponentItem[],\n    /** target是否已渲染, 未渲染时调用render会渲染默认Target */\n    targetIsRender: false,\n  };\n\n  function hide(id: string) {\n    const current = getItemById(id);\n\n    if (!current) return;\n    if (!current.state[showKey]) return;\n\n    setStateByCurrent(current, {\n      [showKey]: false,\n    } as any);\n  }\n\n  function show(id: string) {\n    const current = getItemById(id);\n\n    if (!current) return;\n    if (current.state[showKey]) return;\n\n    setStateByCurrent(current, {\n      [showKey]: true,\n    } as any);\n  }\n\n  function dispose(id: string) {\n    const ind = getIndexById(id);\n\n    if (ind === -1) return;\n\n    ctx.list.splice(ind, 1);\n\n    changeEvent.emit();\n  }\n\n  function disposeAll() {\n    ctx.list = [];\n    changeEvent.emit();\n  }\n\n  /** 设置所有实例的开启或关闭状态 */\n  function setAllShow(open: boolean) {\n    ctx.list.forEach((item) =>\n      setStateByCurrent(\n        item,\n        {\n          [showKey]: open,\n        } as any,\n        false\n      )\n    );\n    changeEvent.emit();\n  }\n\n  /** 设置指定id的实例状态, 不更新状态 */\n  function setStateById(\n    id: string,\n    nState: Partial<RenderApiOmitBuiltState<S>>\n  ) {\n    const ind = getIndexById(id);\n    if (ind === -1) return;\n    setStateByCurrent(ctx.list[ind], nState);\n  }\n\n  /**\n   * 根据实例信息设置其状态并更新updateFlag, autoUpdate = true时才会触发更新\n   * 这是更新组件的唯一途径\n   * */\n  function setStateByCurrent(\n    current: _ComponentItem,\n    nState: Partial<RenderApiOmitBuiltState<S>>,\n    autoUpdate = true\n  ) {\n    const omitKeys = [...setStateWhiteList, changeKey].join(\",\");\n\n    Object.assign(current.state, omit(nState, omitKeys));\n\n    current.updateFlag += 1;\n\n    autoUpdate && changeEvent.emit();\n  }\n\n  /** 获取指定id的实例 */\n  function getItemById(id: string) {\n    return ctx.list.find((item) => item.id === id);\n  }\n\n  /** 获取指定id实例所在的索引位置 */\n  function getIndexById(id: string) {\n    return ctx.list.findIndex((item) => item.id === id);\n  }\n\n  /** 创建并渲染一个实例 */\n  function render(state: Partial<RenderApiOmitBuiltState<S>>) {\n    const id = createRandString();\n\n    let innerInstance: any = null;\n    /** 存储所有safe操作, 并在RenderApiComponentInstance.current存在时调用 */\n    const unsafeCallQueue: AnyFunction[] = [];\n\n    if (isFunction(option.omitState)) {\n      state = option.omitState(state);\n    }\n\n    /** 创建组件state */\n    const _state: RenderApiComponentBaseProps<S, I> = {\n      // S\n      ...option.defaultState,\n      ...state,\n\n      // RenderApiComponentProps\n      [showKey]: true,\n      [changeKey]: (cur: boolean) => {\n        setStateById(id, { [showKey]: cur } as any);\n        changeEvent.emit();\n      },\n\n      // below RenderApiComponentBaseProps\n      onDispose: dispose.bind(null, id),\n      onUpdate: setStateById.bind(null, id),\n      instanceRef: (instance: I | null) => {\n        innerInstance = instance;\n        // 在实例可用后, 如果unsafeCallQueue存在内容, 则全部进行处理\n        if (innerInstance && unsafeCallQueue.length) {\n          unsafeCallQueue\n            .splice(0, unsafeCallQueue.length)\n            .forEach((cb) => cb());\n        }\n      },\n    };\n\n    const instance: RenderApiComponentInstance<S, any> = {\n      hide: hide.bind(null, id),\n      show: show.bind(null, id),\n      dispose: dispose.bind(null, id),\n      state: _state as any,\n      setState: _state.onUpdate!,\n      current: null,\n      safe: (cb) => {\n        if (!cb) return;\n        if (innerInstance) {\n          cb();\n          return;\n        }\n        unsafeCallQueue.push(cb);\n      },\n    };\n\n    // 实例被设置时接收通知\n    Object.defineProperty(instance, \"current\", {\n      get() {\n        return innerInstance;\n      },\n    });\n\n    ctx.list.push({\n      id,\n      state: _state,\n      instance: instance as any,\n      updateFlag: 0,\n    });\n\n    shakeOverInstance();\n\n    if (!ctx.targetIsRender) {\n      ctx.targetIsRender = true;\n      // 可能会在瞬间接收到多个render请求, 延迟渲染target以同时处理初始化的多个render\n      defer(mountDefaultTarget);\n    }\n\n    changeEvent.emit();\n\n    return instance as RenderApiComponentInstance<S, I>;\n  }\n\n  // 将超出maxInstance的实例移除, 不会主动触发更新\n  function shakeOverInstance() {\n    if (option.maxInstance && ctx.list.length > option.maxInstance) {\n      ctx.list.splice(0, ctx.list.length - option.maxInstance);\n    }\n  }\n\n  const setOption: RenderApiInstance<any, any>[\"setOption\"] = (_opt) => {\n    const o: any = {};\n    const keys = Object.keys(_opt);\n    // 是否需要更新ui\n    let needUpdate = false;\n\n    keys.forEach((key) => {\n      if (updateOptionWhiteList.includes(key)) {\n        o[key] = _opt[key as \"wrap\"];\n      }\n\n      if (key === \"wrap\" || key === \"maxInstance\") {\n        needUpdate = true;\n      }\n    });\n    Object.assign(option, o);\n\n    if (needUpdate) {\n      changeEvent.emit();\n    }\n  };\n\n  function mountDefaultTarget() {\n    const container = document.createElement(\"div\");\n    container.setAttribute(\"data-describe\", \"RENDER-API DEFAULT TARGET\");\n    document.body.appendChild(container);\n\n    const root = createRoot(container);\n\n    root.render(<RenderTarget />);\n  }\n\n  /** 挂载点 */\n  function RenderTarget() {\n    useMemo(() => (ctx.targetIsRender = true), []);\n\n    const [, update] = useState(0);\n\n    changeEvent.useEvent(() => {\n      update((p) => p + 1);\n    });\n\n    useEffect(() => {\n      // 在默认target渲染完成之前可能会有状态变更, 渲染完成后统一更新一次\n      update((p) => p + 1);\n    }, []);\n\n    function renderList() {\n      return ctx.list.map(({ id, instance, state, updateFlag }) => {\n        return (\n          <MemoComponent\n            {...state}\n            key={id}\n            instance={instance}\n            _updateFlag={updateFlag}\n          />\n        );\n      });\n    }\n\n    const Wrap = option.wrap;\n\n    const node = Wrap ? <Wrap>{renderList()}</Wrap> : renderList();\n\n    return ReactDom.createPortal(node, getPortalsNode(namespace));\n  }\n\n  return {\n    RenderTarget,\n    render,\n    hideAll: () => setAllShow(false),\n    showAll: () => setAllShow(true),\n    disposeAll,\n    getInstances: () => ctx.list.map((item) => item.instance),\n    events: {\n      change: changeEvent,\n    },\n    setOption,\n    getOption: () => ({ ...option }),\n  };\n}\n\nexport default create;\n"],"names":["React","useEffect","useMemo","useState","createEvent","createRandString","defer","getPortalsNode","isFunction","omit","ReactDom","createRoot","updateOptionWhiteList","setStateWhiteList","create","opt","hide","id","current","getItemById","state","showKey","setStateByCurrent","show","dispose","ind","getIndexById","ctx","list","splice","changeEvent","emit","disposeAll","setAllShow","open","forEach","item","setStateById","nState","autoUpdate","omitKeys","changeKey","join","Object","assign","updateFlag","find","findIndex","render","innerInstance","unsafeCallQueue","option","omitState","_state","defaultState","cur","onDispose","bind","onUpdate","instanceRef","instance","length","cb","setState","safe","push","defineProperty","get","shakeOverInstance","targetIsRender","mountDefaultTarget","maxInstance","container","document","createElement","setAttribute","body","appendChild","root","RenderTarget","update","useEvent","p","renderList","map","MemoComponent","key","_updateFlag","Wrap","wrap","node","createPortal","namespace","component","Component","memo","prev","next","setOption","_opt","o","keys","needUpdate","includes","hideAll","showAll","getInstances","events","change","getOption"],"mappings":"AAAA;;;;;;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO,CAAC;AAC5D,SAASC,WAAW,QAAQ,YAAY,CAAC;AACzC,SAEEC,gBAAgB,EAChBC,KAAK,EACLC,cAAc,EACdC,UAAU,EACVC,IAAI,QACC,YAAY,CAAC;AACpB,OAAOC,QAAQ,MAAM,WAAW,CAAC;AACjC,SAASC,UAAU,QAAQ,kBAAkB,CAAC;AAU9C,oCAAoC;AACpC,IAAMC,qBAAqB,GAAG;IAAC,cAAc;IAAE,MAAM;IAAE,aAAa;CAAC,AAAC;AACtE,gEAAgE;AAChE,IAAMC,iBAAiB,GAAG;IAAC,WAAW;IAAE,UAAU;IAAE,aAAa;CAAC,AAAC;AAEnE;;;;;GAKG,GACH,SAASC,MAAM,CACbC,GAAuB,EACE;QA2BhBC,IAAI,GAAb,SAASA,IAAI,CAACC,EAAU,EAAE;QACxB,IAAMC,OAAO,GAAGC,WAAW,CAACF,EAAE,CAAC,AAAC;QAEhC,IAAI,CAACC,OAAO,EAAE,OAAO;QACrB,IAAI,CAACA,OAAO,CAACE,KAAK,CAACC,OAAO,CAAC,EAAE,OAAO;QAEpCC,iBAAiB,CAACJ,OAAO,EACvB,qBAACG,OAAO,EAAG,KAAK,CAAA,CACT,CAAC;IACZ,CAAC;QAEQE,IAAI,GAAb,SAASA,IAAI,CAACN,EAAU,EAAE;QACxB,IAAMC,OAAO,GAAGC,WAAW,CAACF,EAAE,CAAC,AAAC;QAEhC,IAAI,CAACC,OAAO,EAAE,OAAO;QACrB,IAAIA,OAAO,CAACE,KAAK,CAACC,OAAO,CAAC,EAAE,OAAO;QAEnCC,iBAAiB,CAACJ,OAAO,EACvB,qBAACG,OAAO,EAAG,IAAI,CAAA,CACR,CAAC;IACZ,CAAC;QAEQG,OAAO,GAAhB,SAASA,OAAO,CAACP,EAAU,EAAE;QAC3B,IAAMQ,GAAG,GAAGC,YAAY,CAACT,EAAE,CAAC,AAAC;QAE7B,IAAIQ,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO;QAEvBE,GAAG,CAACC,IAAI,CAACC,MAAM,CAACJ,GAAG,EAAE,CAAC,CAAC,CAAC;QAExBK,WAAW,CAACC,IAAI,EAAE,CAAC;IACrB,CAAC;QAEQC,UAAU,GAAnB,SAASA,UAAU,GAAG;QACpBL,GAAG,CAACC,IAAI,GAAG,EAAE,CAAC;QACdE,WAAW,CAACC,IAAI,EAAE,CAAC;IACrB,CAAC;QAGQE,UAAU,GADnB,mBAAmB,GACnB,SAASA,UAAU,CAACC,IAAa,EAAE;QACjCP,GAAG,CAACC,IAAI,CAACO,OAAO,CAAC,SAACC,IAAI;mBACpBd,iBAAiB,CACfc,IAAI,EAEF,qBAACf,OAAO,EAAGa,IAAI,CAAA,EAEjB,KAAK,CACN;SAAA,CACF,CAAC;QACFJ,WAAW,CAACC,IAAI,EAAE,CAAC;IACrB,CAAC;QAGQM,YAAY,GADrB,uBAAuB,GACvB,SAASA,YAAY,CACnBpB,EAAU,EACVqB,MAA2C,EAC3C;QACA,IAAMb,GAAG,GAAGC,YAAY,CAACT,EAAE,CAAC,AAAC;QAC7B,IAAIQ,GAAG,KAAK,CAAC,CAAC,EAAE,OAAO;QACvBH,iBAAiB,CAACK,GAAG,CAACC,IAAI,CAACH,GAAG,CAAC,EAAEa,MAAM,CAAC,CAAC;IAC3C,CAAC;QAMQhB,iBAAiB,GAJ1B;;;KAGG,GACH,SAASA,iBAAiB,CACxBJ,OAAuB,EACvBoB,MAA2C,EAE3C;YADAC,UAAU,GAAVA,+CAAiB,kBAAJ,IAAI;QAEjB,IAAMC,QAAQ,GAAG,AAAC,qBAAG3B,iBAAiB,CAAjBA,QAAJ;YAAuB4B,SAAS;SAAC,CAAA,CAACC,IAAI,CAAC,GAAG,CAAC,AAAC;QAE7DC,MAAM,CAACC,MAAM,CAAC1B,OAAO,CAACE,KAAK,EAAEX,IAAI,CAAC6B,MAAM,EAAEE,QAAQ,CAAC,CAAC,CAAC;QAErDtB,OAAO,CAAC2B,UAAU,IAAI,CAAC,CAAC;QAExBN,UAAU,IAAIT,WAAW,CAACC,IAAI,EAAE,CAAC;IACnC,CAAC;QAGQZ,WAAW,GADpB,cAAc,GACd,SAASA,WAAW,CAACF,EAAU,EAAE;QAC/B,OAAOU,GAAG,CAACC,IAAI,CAACkB,IAAI,CAAC,SAACV,IAAI;mBAAKA,IAAI,CAACnB,EAAE,KAAKA,EAAE;SAAA,CAAC,CAAC;IACjD,CAAC;QAGQS,YAAY,GADrB,oBAAoB,GACpB,SAASA,YAAY,CAACT,EAAU,EAAE;QAChC,OAAOU,GAAG,CAACC,IAAI,CAACmB,SAAS,CAAC,SAACX,IAAI;mBAAKA,IAAI,CAACnB,EAAE,KAAKA,EAAE;SAAA,CAAC,CAAC;IACtD,CAAC;QAGQ+B,MAAM,GADf,cAAc,GACd,SAASA,MAAM,CAAC5B,KAA0C,EAAE;QAC1D,IAAMH,EAAE,GAAGZ,gBAAgB,EAAE,AAAC;QAE9B,IAAI4C,aAAa,GAAQ,IAAI,AAAC;QAC9B,0DAA0D,GAC1D,IAAMC,eAAe,GAAkB,EAAE,AAAC;QAE1C,IAAI1C,UAAU,CAAC2C,MAAM,CAACC,SAAS,CAAC,EAAE;YAChChC,KAAK,GAAG+B,MAAM,CAACC,SAAS,CAAChC,KAAK,CAAC,CAAC;QAClC,CAAC;;QAED,cAAc,GACd,IAAMiC,MAAM,GAAsC,wCAE7CF,MAAM,CAACG,YAAY,EACnBlC,KAAK,eAER,0BAA0B;QAC1B,uBAACC,OAAO,EAAG,IAAI,CAAA,EACf,uBAACoB,SAAS,EAAG,SAACc,GAAY,EAAK;YAC7BlB,YAAY,CAACpB,EAAE,EAAI,qBAACI,OAAO,EAAGkC,GAAG,CAAA,CAAU,CAAC;YAC5CzB,WAAW,CAACC,IAAI,EAAE,CAAC;QACrB,CAAC,CAAA,EAED,oCAAoC;QACpCyB,uBAAAA,WAAS,EAAEhC,OAAO,CAACiC,IAAI,CAAC,IAAI,EAAExC,EAAE,CAAC,CAAA,EACjCyC,uBAAAA,UAAQ,EAAErB,YAAY,CAACoB,IAAI,CAAC,IAAI,EAAExC,EAAE,CAAC,CAAA,EACrC0C,uBAAAA,aAAW,EAAE,SAACC,QAAkB,EAAK;YACnCX,aAAa,GAAGW,QAAQ,CAAC;YACzB,yCAAyC;YACzC,IAAIX,aAAa,IAAIC,eAAe,CAACW,MAAM,EAAE;gBAC3CX,eAAe,CACZrB,MAAM,CAAC,CAAC,EAAEqB,eAAe,CAACW,MAAM,CAAC,CACjC1B,OAAO,CAAC,SAAC2B,EAAE;2BAAKA,EAAE,EAAE;iBAAA,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC,CAAA,QACF,AAAC;QAEF,IAAMF,QAAQ,GAAuC;YACnD5C,IAAI,EAAEA,IAAI,CAACyC,IAAI,CAAC,IAAI,EAAExC,EAAE,CAAC;YACzBM,IAAI,EAAEA,IAAI,CAACkC,IAAI,CAAC,IAAI,EAAExC,EAAE,CAAC;YACzBO,OAAO,EAAEA,OAAO,CAACiC,IAAI,CAAC,IAAI,EAAExC,EAAE,CAAC;YAC/BG,KAAK,EAAEiC,MAAM;YACbU,QAAQ,EAAEV,MAAM,CAACK,QAAQ;YACzBxC,OAAO,EAAE,IAAI;YACb8C,IAAI,EAAE,SAACF,EAAE,EAAK;gBACZ,IAAI,CAACA,EAAE,EAAE,OAAO;gBAChB,IAAIb,aAAa,EAAE;oBACjBa,EAAE,EAAE,CAAC;oBACL,OAAO;gBACT,CAAC;gBACDZ,eAAe,CAACe,IAAI,CAACH,EAAE,CAAC,CAAC;YAC3B,CAAC;SACF,AAAC;QAEF,aAAa;QACbnB,MAAM,CAACuB,cAAc,CAACN,QAAQ,EAAE,SAAS,EAAE;YACzCO,GAAG,EAAHA,WAAM;gBACJ,OAAOlB,aAAa,CAAC;YACvB,CAAC;SACF,CAAC,CAAC;QAEHtB,GAAG,CAACC,IAAI,CAACqC,IAAI,CAAC;YACZhD,EAAE,EAAFA,EAAE;YACFG,KAAK,EAAEiC,MAAM;YACbO,QAAQ,EAAEA,QAAQ;YAClBf,UAAU,EAAE,CAAC;SACd,CAAC,CAAC;QAEHuB,iBAAiB,EAAE,CAAC;QAEpB,IAAI,CAACzC,GAAG,CAAC0C,cAAc,EAAE;YACvB1C,GAAG,CAAC0C,cAAc,GAAG,IAAI,CAAC;YAC1B,mDAAmD;YACnD/D,KAAK,CAACgE,kBAAkB,CAAC,CAAC;QAC5B,CAAC;QAEDxC,WAAW,CAACC,IAAI,EAAE,CAAC;QAEnB,OAAO6B,QAAQ,CAAqC;IACtD,CAAC;QAGQQ,iBAAiB,GAD1B,gCAAgC;IAChC,SAASA,iBAAiB,GAAG;QAC3B,IAAIjB,MAAM,CAACoB,WAAW,IAAI5C,GAAG,CAACC,IAAI,CAACiC,MAAM,GAAGV,MAAM,CAACoB,WAAW,EAAE;YAC9D5C,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,EAAEF,GAAG,CAACC,IAAI,CAACiC,MAAM,GAAGV,MAAM,CAACoB,WAAW,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;QAwBQD,kBAAkB,GAA3B,SAASA,kBAAkB,GAAG;QAC5B,IAAME,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC,AAAC;QAChDF,SAAS,CAACG,YAAY,CAAC,eAAe,EAAE,2BAA2B,CAAC,CAAC;QACrEF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,SAAS,CAAC,CAAC;QAErC,IAAMM,IAAI,GAAGnE,UAAU,CAAC6D,SAAS,CAAC,AAAC;QAEnCM,IAAI,CAAC9B,MAAM,eAAC,KAAC+B,YAAY,KAAG,CAAC,CAAC;IAChC,CAAC;QAGQA,YAAY,GADrB,QAAQ,GACR,SAASA,YAAY,GAAG;QACtB7E,OAAO,CAAC;mBAAOyB,GAAG,CAAC0C,cAAc,GAAG,IAAI;SAAC,EAAE,EAAE,CAAC,CAAC;QAE/C,IAAmBlE,GAAW,oBAAXA,QAAQ,CAAC,CAAC,CAAC,IAAA,EAArB6E,MAAM,GAAI7E,GAAW,GAAf,AAAgB;QAE/B2B,WAAW,CAACmD,QAAQ,CAAC,WAAM;YACzBD,MAAM,CAAC,SAACE,CAAC;uBAAKA,CAAC,GAAG,CAAC;aAAA,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;QAEHjF,SAAS,CAAC,WAAM;YACd,uCAAuC;YACvC+E,MAAM,CAAC,SAACE,CAAC;uBAAKA,CAAC,GAAG,CAAC;aAAA,CAAC,CAAC;QACvB,CAAC,EAAE,EAAE,CAAC,CAAC;QAEP,SAASC,UAAU,GAAG;YACpB,OAAOxD,GAAG,CAACC,IAAI,CAACwD,GAAG,CAAC,gBAAyC;oBAAtCnE,EAAE,SAAFA,EAAE,EAAE2C,QAAQ,SAARA,QAAQ,EAAExC,KAAK,SAALA,KAAK,EAAEyB,UAAU,SAAVA,UAAU;gBACpD,qBACE,eAACwC,aAAa,0CACRjE,KAAK;oBACTkE,GAAG,EAAErE,EAAE;oBACP2C,QAAQ,EAAEA,QAAQ;oBAClB2B,WAAW,EAAE1C,UAAU;mBACvB,CACF;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAM2C,IAAI,GAAGrC,MAAM,CAACsC,IAAI,AAAC;QAEzB,IAAMC,IAAI,GAAGF,IAAI,iBAAG,KAACA,IAAI;sBAAEL,UAAU,EAAE;UAAQ,GAAGA,UAAU,EAAE,AAAC;QAE/D,qBAAOzE,QAAQ,CAACiF,YAAY,CAACD,IAAI,EAAEnF,cAAc,CAACqF,SAAS,CAAC,CAAC,CAAC;IAChE,CAAC;IA9QD,IAAMzC,MAAM,GAAG,mBAAKpC,GAAG,CAAE,AAAC;IAE1B,6CAA6C;IAC7C,IACE8E,AAAWC,SAAS,GAIlB3C,MAAM,CAJR0C,SAAS,AAAW,eAIlB1C,MAAM,CAHRyC,SAAS,EAATA,SAAS,2BAAG,aAAa,aAAA,aAGvBzC,MAAM,CAFR9B,OAAO,EAAPA,OAAO,yBAAG,MAAM,WAAA,eAEd8B,MAAM,CADRV,SAAS,EAATA,SAAS,2BAAG,UAAU,aAAA,AACb;IAEX,mCAAmC,GACnC,IAAM4C,aAAa,iBAAGrF,KAAK,CAAC+F,IAAI,CAC9BD,SAAS,EACT,SAACE,IAAI,EAAEC,IAAI;eAAKD,IAAI,CAACT,WAAW,KAAKU,IAAI,CAACV,WAAW;KAAA,CACtD,AAAC;IAEF,WAAW,GACX,IAAMzD,WAAW,GAAG1B,WAAW,EAAE,AAAC;IAElC,eAAe,GACf,IAAMuB,GAAG,GAAG;QACVC,IAAI,EAAE,EAAE;QACR,yCAAyC,GACzCyC,cAAc,EAAE,KAAK;KACtB,AAAC;IAqLF,IAAM6B,SAAS,GAA6C,SAACC,IAAI,EAAK;QACpE,IAAMC,CAAC,GAAQ,EAAE,AAAC;QAClB,IAAMC,IAAI,GAAG1D,MAAM,CAAC0D,IAAI,CAACF,IAAI,CAAC,AAAC;QAC/B,WAAW;QACX,IAAIG,UAAU,GAAG,KAAK,AAAC;QAEvBD,IAAI,CAAClE,OAAO,CAAC,SAACmD,GAAG,EAAK;YACpB,IAAI1E,qBAAqB,CAAC2F,QAAQ,CAACjB,GAAG,CAAC,EAAE;gBACvCc,CAAC,CAACd,GAAG,CAAC,GAAGa,IAAI,CAACb,GAAG,CAAW,CAAC;YAC/B,CAAC;YAED,IAAIA,GAAG,KAAK,MAAM,IAAIA,GAAG,KAAK,aAAa,EAAE;gBAC3CgB,UAAU,GAAG,IAAI,CAAC;YACpB,CAAC;QACH,CAAC,CAAC,CAAC;QACH3D,MAAM,CAACC,MAAM,CAACO,MAAM,EAAEiD,CAAC,CAAC,CAAC;QAEzB,IAAIE,UAAU,EAAE;YACdxE,WAAW,CAACC,IAAI,EAAE,CAAC;QACrB,CAAC;IACH,CAAC,AAAC;IA+CF,OAAO;QACLgD,YAAY,EAAZA,YAAY;QACZ/B,MAAM,EAANA,MAAM;QACNwD,OAAO,EAAE;mBAAMvE,UAAU,CAAC,KAAK,CAAC;SAAA;QAChCwE,OAAO,EAAE;mBAAMxE,UAAU,CAAC,IAAI,CAAC;SAAA;QAC/BD,UAAU,EAAVA,UAAU;QACV0E,YAAY,EAAE;mBAAM/E,GAAG,CAACC,IAAI,CAACwD,GAAG,CAAC,SAAChD,IAAI;uBAAKA,IAAI,CAACwB,QAAQ;aAAA,CAAC;SAAA;QACzD+C,MAAM,EAAE;YACNC,MAAM,EAAE9E,WAAW;SACpB;QACDoE,SAAS,EAATA,SAAS;QACTW,SAAS,EAAE;mBAAO,mBAAK1D,MAAM,CAAE;SAAC;KACjC,CAAC;AACJ,CAAC;AAED,eAAerC,MAAM,CAAC"}