{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/permission/src/proType.ts"],"sourcesContent":["import { Seed } from '@m78/seed';\nimport { Permission } from './types';\n\n/**\n * 权限模板\n *\n * 权限模板格式如: `module:keys`\n * - name为权限所属模块\n * - keys为具体的权限\n *\n * 模板中可以使用一些DSL语法, 比如:\n * - user:create&update\n * - user:create|update\n * - user:create&update|delete\n * - user:create&(update|update2)\n * */\nexport type PermissionProTpl = string;\n\n/**\n * 描述权限的对象\n * */\nexport type PermissionProSchema = {\n  [key: string]: string[];\n};\n\n/**\n * PermissionProAST中允许出现的类型\n * */\nexport enum _PermissionProPieceType {\n  key,\n  and,\n  or,\n  leftBrackets,\n  rightBrackets,\n}\n\n/**\n * PermissionProAST的组成部分\n * */\nexport interface _PermissionProPiece {\n  key?: string;\n  type: _PermissionProPieceType;\n}\n\n/** 描述单个验证模板的简单语法树 */\nexport type _PermissionProAST = Array<_PermissionProPiece | Array<_PermissionProPiece>>;\n\n/**\n * 用于描述一项权限的元信息\n * */\nexport interface PermissionProMeta {\n  /** 权限名 */\n  label: string;\n  /** 标识权限的唯一key */\n  key: string;\n  /** 其他, 用于扩展字段 */\n  [key: string]: any;\n}\n\n/** 用于描述验证失败的元信息 */\nexport type PermissionProRejectMeta =\n  | null\n  | {\n      /** 所属模块名称 */\n      label: string;\n      /** 模块的key */\n      module: string;\n      /** 缺失的权限 */\n      missing: PermissionProMeta[];\n    }[];\n\n/**\n * meta配置\n * */\nexport interface PermissionProMetaConfig {\n  /** 通用配置, 如果modules中没有匹配则使用这里的配置 */\n  general?: PermissionProMeta[];\n  /** 每个模块独立的配置, 可以是权限信息数组或包含module名的对象 */\n  modules?: {\n    [key: string]:\n      | PermissionProMeta[]\n      | {\n          /** 模块名 */\n          label?: string;\n          list?: PermissionProMeta[];\n        };\n  };\n  /** 用于在验证meta生成前对其改写 */\n  each?: (meta: PermissionProMeta) => PermissionProMeta;\n}\n\n/** PermissionPro实例 */\nexport interface PermissionPro {\n  /** 执行验证, 如果验证失败, 返回缺失权限组成的数组, 如果数组项为数组则表示逻辑 `or` */\n  check: (keys: Array<PermissionProTpl | PermissionProTpl[]>) => PermissionProRejectMeta;\n  /** 内部使用的seed实例 */\n  seed: Seed<_PermissionProSeedState>;\n  /** 内部使用的常规版permission实例 */\n  permission: Permission<_PermissionProSeedState>;\n}\n\nexport interface _PermissionProSeedState {\n  permission: PermissionProSchema;\n  meta?: PermissionProMetaConfig;\n}\n\n/**\n * PermissionPro的创建配置\n * */\nexport interface PermissionProConfig {\n  /** 初始权限 */\n  permission?: PermissionProSchema;\n  /**\n   * 对权限进行详细描述的配置, 不设置时通过key来生成验证失败的信息\n   * - 此配置用来为权限附加更多的可用信息, 如权限名, 权限描述, 可用的操作等等, 方便使用者通过这些信息创建更友好的失败反馈.\n   * */\n  meta?: PermissionProMetaConfig;\n  /** 内部使用的的seed, 如果创建pro时传入了seed则两者是相同的 */\n  seed?: Seed;\n}\n\n/**\n * PermissionPro实例创建器\n * */\nexport interface PermissionProCreator {\n  (config: PermissionProConfig): PermissionPro;\n}\n"],"names":["_PermissionProPieceType","key","and","or","leftBrackets","rightBrackets"],"mappings":"AAAA,WA4BO,uBAMN;UANWA,uBAAuB;IAAvBA,uBAAuB,CAAvBA,uBAAuB,CACjCC,KAAG,IAAHA,CAAG,IAAHA,KAAG;IADOD,uBAAuB,CAAvBA,uBAAuB,CAEjCE,KAAG,IAAHA,CAAG,IAAHA,KAAG;IAFOF,uBAAuB,CAAvBA,uBAAuB,CAGjCG,IAAE,IAAFA,CAAE,IAAFA,IAAE;IAHQH,uBAAuB,CAAvBA,uBAAuB,CAIjCI,cAAY,IAAZA,CAAY,IAAZA,cAAY;IAJFJ,uBAAuB,CAAvBA,uBAAuB,CAKjCK,eAAa,IAAbA,CAAa,IAAbA,eAAa;GALHL,uBAAuB,KAAvBA,uBAAuB"}