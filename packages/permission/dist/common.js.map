{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/permission/src/common.ts"],"sourcesContent":["import { isArray, isEmpty, isString } from \"@lxjx/utils\";\nimport {\n  Permission,\n  PermissionConfig,\n  PermissionKeys,\n  CreatePermissionConfig,\n  Validator,\n  Validators,\n  ValidMeta,\n} from \"./types\";\nimport {\n  _PermissionProSeedState,\n  _PermissionProAST,\n  PermissionProMeta,\n  PermissionProMetaConfig,\n  _PermissionProPiece,\n  _PermissionProPieceType,\n  PermissionProTpl,\n  PermissionProRejectMeta,\n} from \"./proType\";\n\nexport const throwError = (str: string): never => {\n  throw Error(`PermissionPro: ${str}`);\n};\n\n/**\n * 传入验证key、验证器列表、依赖数据、额外数据。对该key进行验证后返回验证结果(void 或 ValidMeta)\n * */\nexport const validItem = (\n  key: string,\n  validators: Validators<any>,\n  state: any,\n  extra: any\n) => {\n  const validator = validators[key];\n  // 不存在此验证器\n  if (!validator) return;\n\n  return validator(state, extra);\n};\n\n/**\n * 实现Permission api\n * */\nexport function permissionImpl(conf: CreatePermissionConfig): Permission {\n  const permission = (keys: PermissionKeys<any>, config?: PermissionConfig) => {\n    const { validators, validFirst, seed } = conf;\n    const state = seed.get();\n    const { extra, validators: localValidators }: PermissionConfig =\n      config || {};\n\n    /** 所有验证失败结果 */\n    const rejects: ValidMeta[] = [];\n    /** 是否通过 */\n    let pass = true;\n\n    /**\n     * 传入单个权限key或key数组进行验证, 并将验证结果写入pass和rejects\n     * 单个验证时: 验证该项并返回验证meta信息，验证正确时无返回\n     * key数组时: 作为条件`or`进行验证，只要其中任意一项通过了验证则通过验证\n     * */\n    const test = (key: any, isOr?: boolean) => {\n      if (isArray(key)) {\n        const tempRejects: ValidMeta[] = [];\n        let flag = false;\n\n        for (const pItem of key) {\n          const meta = test(pItem, true);\n\n          if (meta) {\n            tempRejects.push(meta);\n          }\n\n          // 成功任意一项即视为成功\n          if (!meta) {\n            flag = true;\n            break;\n          }\n        }\n\n        if (!flag) {\n          pass = false;\n          validFirst\n            ? rejects.push(tempRejects[0])\n            : rejects.push(...tempRejects);\n        }\n      } else {\n        const meta = validItem(\n          key,\n          { ...validators, ...localValidators },\n          state,\n          extra\n        );\n\n        if (!meta) return;\n\n        // 非or时直接判定为失败\n        if (!isOr) {\n          pass = false;\n          rejects.push(meta);\n        }\n\n        return meta;\n      }\n    };\n\n    if (validFirst) {\n      for (const pItem of keys) {\n        if (pass) {\n          test(pItem);\n        }\n      }\n    } else {\n      keys.forEach((ak) => test(ak));\n    }\n\n    return rejects.length ? rejects : null;\n  };\n\n  permission.seed = conf.seed;\n\n  return permission;\n}\n\n/**\n * ###############################################\n *                      Pro\n * ###############################################\n * */\n\n/**\n * 将PermissionTpl转换为PermissionProAST, 如果格式错误则抛出异常\n * 首尾为特殊字符时异常\n * */\nexport function permissionProTplParser(tpl: PermissionProTpl) {\n  const invalidTip = `invalid permission template -> ${tpl}`;\n  const keyReg = /\\w+|&|\\||\\(|\\)/g;\n\n  if (!tpl || !isString(tpl)) throwError(invalidTip);\n\n  const [mod, keys] = tpl.split(\":\");\n\n  if (!mod || !keys) throwError(invalidTip);\n\n  const ast: _PermissionProAST = [];\n\n  let match: RegExpExecArray | null = null;\n  let bracketsFlag = false;\n  let lastType: _PermissionProPieceType | null = null;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((match = keyReg.exec(keys)) !== null) {\n    const s = match[0];\n\n    const ls = bracketsFlag\n      ? (ast[ast.length - 1] as Array<_PermissionProPiece>)\n      : ast;\n\n    switch (s) {\n      case \"&\":\n        ls.push({\n          type: _PermissionProPieceType.and,\n        });\n        lastType = _PermissionProPieceType.and;\n        break;\n      case \"|\":\n        ls.push({\n          type: _PermissionProPieceType.or,\n        });\n        lastType = _PermissionProPieceType.or;\n        break;\n      case \"(\":\n        if (!isArray(ls) || bracketsFlag) throwError(invalidTip);\n\n        ls.push([]);\n        bracketsFlag = true;\n        lastType = _PermissionProPieceType.leftBrackets;\n        break;\n      case \")\":\n        bracketsFlag = false;\n        lastType = _PermissionProPieceType.rightBrackets;\n        break;\n      default:\n        if (lastType === _PermissionProPieceType.rightBrackets)\n          throwError(invalidTip);\n\n        ls.push({\n          type: _PermissionProPieceType.key,\n          key: s,\n        });\n        lastType = _PermissionProPieceType.key;\n    }\n  }\n\n  if (!ast.length) throwError(invalidTip);\n\n  return [mod, ast] as const;\n}\n\n/** 权限实现的主验证器key */\nexport const PERMISSION_PRO_NAME = \"PERMISSION_PRO\";\n\n/**\n * PermissionPro内置验证器\n * */\nexport function permissionProValidatorGetter(/* 以后可能会接收配置 */) {\n  const validator: Validator<_PermissionProSeedState> = (\n    { permission, meta },\n    keys: Array<PermissionProTpl | PermissionProTpl[]>\n  ): any /* pro需要改写验证返回 */ => {\n    // 没有传入要验证的权限\n    if (!isArray(keys) || !keys.length) return null;\n\n    const rejects: PermissionProMeta[] = [];\n\n    const checkItem = (k: string) => {\n      const [mod, ast] = permissionProTplParser(k);\n      return checkAST(ast, permission, mod, true, meta);\n    };\n\n    const pushEject = (arg: ReturnType<typeof checkItem>) => {\n      if (!arg.pass) {\n        rejects.push(...arg.result.filter((item: any) => !item.pass));\n      }\n    };\n\n    keys.forEach((item) => {\n      if (isArray(item)) {\n        const temp: ReturnType<typeof checkItem>[] = [];\n        let passFlag = false;\n\n        for (const string of item) {\n          const res = checkItem(string);\n          if (res.pass) {\n            passFlag = true;\n          } else {\n            temp.push(res);\n          }\n        }\n\n        !passFlag && temp.forEach(pushEject);\n      } else {\n        pushEject(checkItem(item));\n      }\n    });\n\n    if (!rejects.length) return null;\n\n    const rejectMeta: NonNullable<PermissionProRejectMeta> = [];\n\n    rejects.forEach((item) => {\n      const current: PermissionProMeta = meta?.each\n        ? meta.each(item.result)\n        : item.result;\n\n      const modKey = current.__mod;\n      const moduleMeta = meta?.modules || {};\n      const currentMod = moduleMeta[modKey];\n      let label = modKey;\n\n      if (!isArray(currentMod) && currentMod?.label) {\n        label = currentMod.label;\n      }\n\n      const currentRejectMeta = rejectMeta.find((it) => it.module === modKey);\n\n      if (!currentRejectMeta) {\n        rejectMeta.push({\n          label,\n          module: modKey,\n          missing: [current],\n        });\n      } else {\n        currentRejectMeta.missing.push(current);\n      }\n\n      delete current.__mod;\n    });\n\n    return rejectMeta;\n  };\n\n  return validator;\n}\n\n/** 对一个PermissionProAST执行验证 */\nexport function checkAST(\n  ast: _PermissionProAST,\n  permission: _PermissionProSeedState[\"permission\"],\n  mod: string,\n  isFirst: boolean,\n  meta?: PermissionProMetaConfig\n) {\n  const result: any[] = [];\n  let pass = false;\n\n  let lastCondition: _PermissionProPieceType | null = null;\n  let lastPass: boolean | undefined;\n\n  for (const piece of ast) {\n    let res: any = null;\n\n    if (isArray(piece)) {\n      res = checkAST(piece, permission, mod, false, meta);\n    } else if (piece.type === _PermissionProPieceType.key) {\n      res = checkKeyPiece(piece, permission, mod, meta);\n    }\n\n    // 前一项为 & 和 | 时, 对比前后结果设置pass\n    if (\n      res &&\n      (lastCondition === _PermissionProPieceType.and ||\n        lastCondition === _PermissionProPieceType.or)\n    ) {\n      if (lastPass === undefined) {\n        lastPass = result[result.length - 1].pass;\n      }\n\n      if (lastCondition === _PermissionProPieceType.and) {\n        pass = res.pass && lastPass;\n        lastPass = pass;\n      }\n\n      if (lastCondition === _PermissionProPieceType.or) {\n        pass = res.pass || lastPass;\n        lastPass = pass;\n      }\n    }\n\n    if (res) result.push(res);\n\n    // 当前项为 & 和 | 时标记\n    if (\n      !isArray(piece) &&\n      (piece.type === _PermissionProPieceType.and ||\n        piece.type === _PermissionProPieceType.or)\n    ) {\n      lastCondition = piece.type;\n    }\n\n    // 不是则还原\n    if (res) {\n      lastCondition = null;\n    }\n  }\n\n  if (isFirst) {\n    const res = result.reduce((prev, item) => {\n      if (isArray(item.result)) {\n        prev.push(...item.result);\n      } else {\n        prev.push(item);\n      }\n\n      return prev;\n    }, []);\n\n    return {\n      // 只有一项上面代码不会走到pass的流程, 直接使用该项的pass\n      pass: res.length === 1 ? res[0].pass : pass,\n      result: res,\n    };\n  }\n\n  return {\n    pass,\n    result,\n  };\n}\n\n/** 根据权限对单个key类型的PermissionProPiece进行检查 */\nfunction checkKeyPiece(\n  piece: _PermissionProPiece,\n  permission: _PermissionProSeedState[\"permission\"],\n  mod: string,\n  meta?: PermissionProMetaConfig\n) {\n  const permissions = permission[mod];\n\n  const result = getMeta(mod, piece.key!, meta);\n\n  if (!isArray(permissions) || !permissions.length)\n    return { pass: false, result };\n\n  const pass = permissions.includes(piece.key!);\n\n  return {\n    pass,\n    result,\n  };\n}\n\n/** 根据key从指定meta配置中拿到其对应的meta信息, 没有则根据key和mod生成回退meta */\nfunction getMeta(\n  mod: string,\n  key: string,\n  meta?: PermissionProMetaConfig\n): PermissionProMeta {\n  const defaultMeta = {\n    label: key,\n    key,\n    __mod: mod,\n  };\n\n  if (!meta || (!meta.general?.length && isEmpty(meta.modules)))\n    return defaultMeta;\n\n  if (!isEmpty(meta.modules)) {\n    const currentMeta = meta.modules![mod];\n\n    const list = isArray(currentMeta) ? currentMeta : currentMeta?.list;\n\n    if (list?.length) {\n      const c = list.find((item) => item.key === key);\n\n      if (c) return { ...c, __mod: mod };\n    }\n  }\n\n  if (meta.general?.length) {\n    const c = meta.general.find((item) => item.key === key);\n\n    if (c) return { ...c, __mod: mod };\n  }\n\n  return defaultMeta;\n}\n"],"names":["isArray","isEmpty","isString","_PermissionProPieceType","throwError","str","Error","validItem","key","validators","state","extra","validator","permissionImpl","conf","permission","keys","config","validFirst","seed","get","localValidators","rejects","pass","test","isOr","tempRejects","flag","pItem","meta","push","forEach","ak","length","permissionProTplParser","tpl","invalidTip","keyReg","split","mod","ast","match","bracketsFlag","lastType","exec","s","ls","type","and","or","leftBrackets","rightBrackets","PERMISSION_PRO_NAME","permissionProValidatorGetter","checkItem","k","checkAST","pushEject","arg","result","filter","item","temp","passFlag","string","res","rejectMeta","current","each","modKey","__mod","moduleMeta","modules","currentMod","label","currentRejectMeta","find","it","module","missing","isFirst","lastCondition","lastPass","piece","checkKeyPiece","undefined","reduce","prev","permissions","getMeta","includes","defaultMeta","general","currentMeta","list","c"],"mappings":"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"}