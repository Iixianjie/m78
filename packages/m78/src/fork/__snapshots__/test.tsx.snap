// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AsyncRender 1`] = `
<div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="m78-result __small"
      style={
        Object {
          "padding": 0,
        }
      }
    >
      <div
        className="m78-result_icon"
      >
        <svg
          className="m78 m78-icon m78-icon_icon-drafts color-disabled"
          data-name="icon-drafts"
          focusable={false}
          height={24}
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M21.99 8c0-.72-.37-1.35-.94-1.7l-8.04-4.71c-.62-.37-1.4-.37-2.02 0L2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zm-11.05 4.34-7.2-4.5 7.25-4.25c.62-.37 1.4-.37 2.02 0l7.25 4.25-7.2 4.5c-.65.4-1.47.4-2.12 0z"
          />
        </svg>
      </div>
      <div
        className="m78-result_desc"
      >
        no data
      </div>
    </div>
  </div>
  <div>
    12312
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="m78 m78-row m78-tile m78-lay __none __status __error m78-cross-start"
    >
      <div
        className="m78-tile_leading"
      >
        <svg
          className="m78 m78-icon m78-icon_icon-error color-error"
          data-name="icon-error"
          focusable={false}
          height={24}
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 11c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z"
          />
        </svg>
      </div>
      <div
        className="m78-tile_main"
        style={
          Object {
            "overflow": "hidden",
          }
        }
      >
        <div
          className="m78-tile_title"
        >
          request exception
        </div>
        <div
          className="m78-tile_desc"
        >
          <div>
            <div
              style={
                Object {
                  "padding": "8px 0 4px",
                }
              }
            >
              please try again later
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="m78 m78-row m78-tile m78-lay __none __status __error m78-cross-start"
    >
      <div
        className="m78-tile_leading"
      >
        <svg
          className="m78 m78-icon m78-icon_icon-error color-error"
          data-name="icon-error"
          focusable={false}
          height={24}
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 11c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z"
          />
        </svg>
      </div>
      <div
        className="m78-tile_main"
        style={
          Object {
            "overflow": "hidden",
          }
        }
      >
        <div
          className="m78-tile_title"
        >
          request timeout
        </div>
        <div
          className="m78-tile_desc"
        >
          <div>
            <div
              style={
                Object {
                  "padding": "8px 0 4px",
                }
              }
            >
              please try again later
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="ptb-12 m78 m78-spin"
      style={
        Object {
          "__progress": 0,
          "opacity": 0,
          "pointerEvents": "none",
          "visibility": "hidden",
        }
      }
    >
      <div
        className="m78-spin_inner"
        style={
          Object {
            "top": undefined,
          }
        }
      >
        <svg
          className="m78-spin-svg m78-spin_unit"
          fill="transparent"
          height={200}
          viewBox="0 0 200 200"
          width={200}
        >
          <circle
            className="m78-spin-svg_bg"
            cx={100}
            cy={100}
            r={70}
            strokeWidth={60}
          />
          <circle
            cx={100}
            cy={100}
            r={70}
            stroke="url(#Gradient1)"
            strokeDasharray="628.3185307179587 628.3185307179587"
            strokeLinecap="round"
            strokeWidth={60}
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="5s"
              repeatCount="indefinite"
              values="628.3185307179587;0;628.3185307179587"
            />
          </circle>
          <defs>
            <linearGradient
              id="Gradient1"
            >
              <stop
                className="m78-spin-svg_stop1"
                offset="0%"
              />
              <stop
                className="m78-spin-svg_stop2"
                offset="100%"
              />
            </linearGradient>
          </defs>
        </svg>
        <span
          className="m78-spin_text"
        >
          loading
          <span
            className="m78-spin_ellipsis"
          />
        </span>
      </div>
    </div>
  </div>
  <div>
    12312
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="ptb-12 m78 m78-spin"
      style={
        Object {
          "__progress": 0,
          "opacity": 0,
          "pointerEvents": "none",
          "visibility": "hidden",
        }
      }
    >
      <div
        className="m78-spin_inner"
        style={
          Object {
            "top": undefined,
          }
        }
      >
        <svg
          className="m78-spin-svg m78-spin_unit"
          fill="transparent"
          height={200}
          viewBox="0 0 200 200"
          width={200}
        >
          <circle
            className="m78-spin-svg_bg"
            cx={100}
            cy={100}
            r={70}
            strokeWidth={60}
          />
          <circle
            cx={100}
            cy={100}
            r={70}
            stroke="url(#Gradient1)"
            strokeDasharray="628.3185307179587 628.3185307179587"
            strokeLinecap="round"
            strokeWidth={60}
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="5s"
              repeatCount="indefinite"
              values="628.3185307179587;0;628.3185307179587"
            />
          </circle>
          <defs>
            <linearGradient
              id="Gradient1"
            >
              <stop
                className="m78-spin-svg_stop1"
                offset="0%"
              />
              <stop
                className="m78-spin-svg_stop2"
                offset="100%"
              />
            </linearGradient>
          </defs>
        </svg>
        <span
          className="m78-spin_text"
        >
          loading
          <span
            className="m78-spin_ellipsis"
          />
        </span>
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="ptb-12 m78 m78-spin __full"
      style={
        Object {
          "__progress": 0,
          "opacity": 0,
          "pointerEvents": "none",
          "visibility": "hidden",
        }
      }
    >
      <div
        className="m78-spin_inner"
        style={
          Object {
            "top": undefined,
          }
        }
      >
        <svg
          className="m78-spin-svg m78-spin_unit"
          fill="transparent"
          height={200}
          viewBox="0 0 200 200"
          width={200}
        >
          <circle
            className="m78-spin-svg_bg"
            cx={100}
            cy={100}
            r={70}
            strokeWidth={60}
          />
          <circle
            cx={100}
            cy={100}
            r={70}
            stroke="url(#Gradient1)"
            strokeDasharray="628.3185307179587 628.3185307179587"
            strokeLinecap="round"
            strokeWidth={60}
          >
            <animate
              attributeName="stroke-dashoffset"
              dur="5s"
              repeatCount="indefinite"
              values="628.3185307179587;0;628.3185307179587"
            />
          </circle>
          <defs>
            <linearGradient
              id="Gradient1"
            >
              <stop
                className="m78-spin-svg_stop1"
                offset="0%"
              />
              <stop
                className="m78-spin-svg_stop2"
                offset="100%"
              />
            </linearGradient>
          </defs>
        </svg>
        <span
          className="m78-spin_text"
        >
          abc
          <span
            className="m78-spin_ellipsis"
          />
        </span>
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="m78-result __small"
      style={
        Object {
          "padding": 0,
        }
      }
    >
      <div
        className="m78-result_icon"
      >
        <svg
          className="m78 m78-icon m78-icon_icon-drafts color-disabled"
          data-name="icon-drafts"
          focusable={false}
          height={24}
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M21.99 8c0-.72-.37-1.35-.94-1.7l-8.04-4.71c-.62-.37-1.4-.37-2.02 0L2.95 6.3C2.38 6.65 2 7.28 2 8v10c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2l-.01-10zm-11.05 4.34-7.2-4.5 7.25-4.25c.62-.37 1.4-.37 2.02 0l7.25 4.25-7.2 4.5c-.65.4-1.47.4-2.12 0z"
          />
        </svg>
      </div>
      <div
        className="m78-result_desc"
      >
        abcd
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="m78 m78-row m78-tile m78-lay __none __status __error m78-cross-start"
    >
      <div
        className="m78-tile_leading"
      >
        <svg
          className="m78 m78-icon m78-icon_icon-error color-error"
          data-name="icon-error"
          focusable={false}
          height={24}
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 11c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z"
          />
        </svg>
      </div>
      <div
        className="m78-tile_main"
        style={
          Object {
            "overflow": "hidden",
          }
        }
      >
        <div
          className="m78-tile_title"
        >
          abcd
        </div>
        <div
          className="m78-tile_desc"
        >
          <div>
            <div
              style={
                Object {
                  "padding": "8px 0 4px",
                }
              }
            >
              please try again later
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div
      className="m78 m78-row m78-tile m78-lay __none __status __error m78-cross-start"
    >
      <div
        className="m78-tile_leading"
      >
        <svg
          className="m78 m78-icon m78-icon_icon-error color-error"
          data-name="icon-error"
          focusable={false}
          height={24}
          viewBox="0 0 24 24"
          width={24}
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 11c-.55 0-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1 4h-2v-2h2v2z"
          />
        </svg>
      </div>
      <div
        className="m78-tile_main"
        style={
          Object {
            "overflow": "hidden",
          }
        }
      >
        <div
          className="m78-tile_title"
        >
          abcd
        </div>
        <div
          className="m78-tile_desc"
        >
          <div>
            <div
              style={
                Object {
                  "padding": "8px 0 4px",
                }
              }
            >
              please try again later
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <span>
      loading
    </span>
  </div>
  <div
    className="m78 m78-fork"
  >
    <div>
      <div>
        request exception
      </div>
      <div />
    </div>
  </div>
  <div
    className="m78 m78-fork"
  >
    <span>
      abcd
    </span>
  </div>
</div>
`;

exports[`fork If 1`] = `
<div>
  <div>
    你看到我了 1
  </div>
  <div>
    你看到我了 4
  </div>
  <div>
    render用法, 条件成立后才会创建Element
  </div>
</div>
`;

exports[`fork Switch 1`] = `
<div>
  <div>
    你看到我了3
  </div>
  <div>
    你看到我了3
  </div>
</div>
`;

exports[`fork Toggle 1`] = `
<div>
  <div>
    你看到我了1
  </div>
  <div
    style={
      Object {
        "display": "none",
      }
    }
  >
    你看不到我2
  </div>
  <div
    style={
      Object {
        "display": "none",
      }
    }
  >
    你看不到我3
  </div>
  <div>
    你看到我了4
  </div>
  <div
    style={
      Object {
        "display": "none",
      }
    }
  >
    如果子节点是字符串或一组ReactElement, 会使用一个div作为包裹节点来挂载 display: none
  </div>
  <div
    style={
      Object {
        "display": "none",
      }
    }
  >
    <div>
      你看不到我
    </div>
    <div>
      你看不到我
    </div>
    <div>
      你看不到我
    </div>
    <div>
      你看不到我
    </div>
    <div>
      你看不到我
    </div>
  </div>
</div>
`;
