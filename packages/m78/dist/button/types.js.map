{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/m78/src/button/types.ts"],"sourcesContent":["import React from \"react\";\nimport { SizeUnion } from \"../common\";\n\nexport enum ButtonColor {\n  blue = \"blue\",\n  red = \"red\",\n  green = \"green\",\n  orange = \"orange\",\n  second = \"second\",\n  primary = \"primary\",\n}\n\nexport type ButtonColorKeys = keyof typeof ButtonColor;\n\nexport type ButtonColorUnion = ButtonColor | ButtonColorKeys;\n\nexport interface ButtonProps {\n  /** 按钮颜色 */\n  color?: ButtonColorUnion;\n  /** 尺寸 */\n  size?: SizeUnion;\n\n  /** 圆形按钮 */\n  circle?: boolean;\n  /** 边框按钮 */\n  outline?: boolean;\n  /** 块级按钮 */\n  block?: boolean;\n  /** icon按钮, children可以是Icon或文字 */\n  icon?: boolean;\n  // 文本按钮\n  text?: boolean;\n\n  /** 设置禁用状态 */\n  disabled?: boolean;\n  /** 设置加载状态 */\n  loading?: boolean;\n  /** 指向内部button的ref */\n  innerRef?: React.Ref<HTMLButtonElement>;\n  /** 代理onClick, 若onClick事件返回了一个promise like对象, 则自动添加loading状态 */\n  onClick?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => any;\n}\n\n/** 剔除内部占用属性的原生按钮props */\ntype HTMLBtnOmit = Omit<\n  React.PropsWithoutRef<JSX.IntrinsicElements[\"button\"]>,\n  \"color\" | \"onClick\"\n>;\n\n/** 剔除内部占用属性的原生html link props */\ntype HTMLLinkOmit = Omit<\n  React.PropsWithoutRef<JSX.IntrinsicElements[\"a\"]>,\n  \"color\" | \"type\" | \"onClick\"\n>;\n\nexport interface ButtonPropsWithHTMLButton extends HTMLBtnOmit, ButtonProps {}\n\nexport interface ButtonPropsWithHTMLLink extends HTMLLinkOmit, ButtonProps {}\n"],"names":["React","ButtonColor","blue","red","green","orange","second","primary"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC;WAGnB,WAON;UAPWC,WAAW;IAAXA,WAAW,CACrBC,MAAI,IAAJA,MAAI;IADMD,WAAW,CAErBE,KAAG,IAAHA,KAAG;IAFOF,WAAW,CAGrBG,OAAK,IAALA,OAAK;IAHKH,WAAW,CAIrBI,QAAM,IAANA,QAAM;IAJIJ,WAAW,CAKrBK,QAAM,IAANA,QAAM;IALIL,WAAW,CAMrBM,SAAO,IAAPA,SAAO;GANGN,WAAW,KAAXA,WAAW"}