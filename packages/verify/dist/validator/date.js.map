{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/verify/src/validator/date.ts"],"sourcesContent":["import { formatDate, parseDate } from \"@m78/utils\";\nimport { Meta, Validator } from \"../types\";\n\ninterface Opt {\n  /** 不大于此时间, 传入值为任何能被解析的时间(Date对象、时间戳、日期字符串等) */\n  max?: any;\n  /** 不小于此时间, 传入值为任何能被解析的时间(Date对象、时间戳、日期字符串等) */\n  min?: any;\n  /** 必须为指定时间, 传入值为任何能被解析的时间(Date对象、时间戳、日期字符串等) */\n  at?: any;\n  /** 进行对比时, 忽略时间值 */\n  ignoreTime?: any;\n}\n\nexport const dateValidatorKey = \"verifyDate\";\n\n/**\n * 必须是有效的日期对象或能被解析的日期值(时间戳、日期字符串等)\n * - 进行时间对比时, 如果日期值未指定时间, 会使用Date对象默认的时间, 比如 new Date('2022-05-05') 默认时间为8点: Thu May 05 2022 08:00:00 GMT+0800 (中国标准时间)\n * 由于此原因, 进行时间对比时, 如果 max/min/at/对比的value 任意一个包含时间, 则必须每一项都包含时间.\n * 也可以传入ignoreTime来忽略每个日期值的时间\n * */\nexport const date = (option?: Opt) => {\n  const dateValidator: Validator = ({ value, config }: Meta) => {\n    const pack = config.languagePack.date;\n    const d = parseDate(value);\n\n    if (d === null)\n      return {\n        errorTemplate: pack.notExpected,\n        interpolateValues: option || {},\n      };\n\n    if (!option) return;\n\n    const at = parseDate(option.at);\n    const max = parseDate(option.max);\n    const min = parseDate(option.min);\n\n    if (option.ignoreTime) {\n      d.setHours(0, 0, 0, 0);\n      at !== null && at.setHours(0, 0, 0, 0);\n      max !== null && max.setHours(0, 0, 0, 0);\n      min !== null && min.setHours(0, 0, 0, 0);\n    }\n\n    const interpolateValues = {\n      at: formatDate(at) || at,\n      max: formatDate(max) || max,\n      min: formatDate(min) || min,\n    };\n\n    if (at !== null && d.getTime() !== at.getTime())\n      return {\n        errorTemplate: pack.at,\n        interpolateValues,\n      };\n\n    if (\n      max !== null &&\n      min !== null &&\n      (d.getTime() > max.getTime() || d.getTime() < min.getTime())\n    ) {\n      return {\n        errorTemplate: pack.between,\n        interpolateValues,\n      };\n    }\n\n    if (max !== null && d.getTime() > max.getTime())\n      return {\n        errorTemplate: pack.max,\n        interpolateValues,\n      };\n\n    if (min !== null && d.getTime() < min.getTime())\n      return {\n        errorTemplate: pack.min,\n        interpolateValues,\n      };\n  };\n\n  dateValidator.key = dateValidatorKey;\n\n  return dateValidator;\n};\n"],"names":["formatDate","parseDate","dateValidatorKey","date","option","dateValidator","value","config","pack","languagePack","d","errorTemplate","notExpected","interpolateValues","at","max","min","ignoreTime","setHours","getTime","between","key"],"mappings":"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"}