{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/verify/src/check.ts"],"sourcesContent":["import {\n  AnyFunction,\n  AnyObject,\n  getNamePathValue,\n  isArray,\n  isFunction,\n  isObject,\n  isString,\n  stringifyNamePath,\n  ensureArray,\n  interpolate,\n} from \"@m78/utils\";\nimport {\n  Config,\n  ErrorTemplateType,\n  Meta,\n  NamePath,\n  RejectMeta,\n  Schema,\n  Validator,\n  Verify,\n} from \"./types\";\nimport {\n  fmtValidator,\n  isErrorTemplateInterpolate,\n  SOURCE_ROOT_NAME,\n} from \"./common\";\nimport { isVerifyEmpty } from \"./validator/required\";\n\n/**\n * 获取check api，verify此时还不可操作, 仅可作为引用传递\n * - 这里要注意的点是，同步和异步 check流程极为相似，为了最大程度的复用，在同步验证时这里通过syncCallBack来对检测结果进行同步回调\n * */\nexport function getCheckApi(conf: Required<Config>, verify: Verify) {\n  const baseCheck = async (\n    args: Parameters<Verify[\"asyncCheck\"]>,\n    syncCallback?: AnyFunction\n  ) => {\n    // 传入callback视为同步调用\n    const isSync = !!syncCallback;\n\n    const [source, _rootSchema, _config] = args;\n\n    const rootSchema = {\n      ..._rootSchema,\n      name: SOURCE_ROOT_NAME,\n    };\n\n    const rejectMeta: RejectMeta = [];\n\n    const getValueByName: Meta[\"getValueByName\"] = (name) =>\n      getNamePathValue(source, name);\n\n    // 对一项schema执行检测, 返回true时可按需跳过后续schema的验证\n    // 如果传入parentNames，会将当前项作为指向并将parentNames与当前name拼接\n    // 同步调用时需要使用checkItemSyncCallback通知跳过验证\n    async function checkSchema(\n      schema: Schema,\n      parentNames: NamePath,\n      checkItemSyncCallback?: AnyFunction\n    ) {\n      const isRootSchema = schema.name === SOURCE_ROOT_NAME;\n\n      const parentNamePath = ensureArray(parentNames);\n      const namePath = [...parentNamePath, ...ensureArray(schema.name)];\n      // 排除rootSchema的真实name\n      const realNamePath = isRootSchema ? [] : namePath;\n\n      let value = isRootSchema ? source : getValueByName(namePath);\n\n      const name = stringifyNamePath(namePath);\n      const label = schema.label || name;\n\n      // 预转换值\n      if (schema.transform) value = schema.transform(value);\n\n      const isEmpty = isVerifyEmpty(value);\n\n      const validators = fmtValidator(schema.validator, isEmpty);\n\n      // 插值对象\n      const interpolateValues: AnyObject = {\n        name,\n        label,\n        value,\n        type: Object.prototype.toString.call(value),\n      };\n\n      // 验证validators\n      if (validators?.length) {\n        for (const validator of validators) {\n          let errorTemplate: ErrorTemplateType = \"\";\n\n          const meta: Meta = {\n            verify,\n            name,\n            label,\n            value,\n            values: source,\n            schema,\n            rootSchema,\n            getValueByName,\n            config: conf,\n            parentNamePath,\n            namePath,\n            isEmpty,\n            ..._config?.extraMeta /* 扩展接口 */,\n          };\n\n          try {\n            const result = isSync\n              ? (validator as Validator)(meta)\n              : await validator(meta);\n\n            // 不同的验证返回类型处理\n            if (isString(result)) errorTemplate = result;\n\n            if (isErrorTemplateInterpolate(result)) {\n              errorTemplate = result.errorTemplate;\n              Object.assign(interpolateValues, result.interpolateValues);\n            }\n\n            if (isFunction(result)) errorTemplate = result(meta);\n          } catch (err: any) {\n            if (err.message) errorTemplate = err.message;\n          }\n\n          if (isString(errorTemplate) && !!errorTemplate.trim()) {\n            rejectMeta.push({\n              ...meta,\n              message: interpolate(errorTemplate, interpolateValues),\n            });\n\n            break;\n          }\n        }\n      }\n\n      const needBreak = !!(conf.verifyFirst && rejectMeta.length);\n\n      if (needBreak) {\n        if (isSync) {\n          checkItemSyncCallback?.(needBreak);\n          return null;\n        } else {\n          return needBreak;\n        }\n      }\n\n      if (schema.schema?.length) {\n        if (isSync) {\n          checkSchemas(schema.schema, realNamePath).then();\n        } else {\n          await checkSchemas(schema.schema, realNamePath);\n        }\n      }\n\n      if (schema.eachSchema) {\n        let _schemas: Schema[] = [];\n\n        if (isArray(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          _schemas = value.map((_, index) => ({\n            ...schema.eachSchema,\n            name: String(index),\n          }));\n        }\n\n        if (isObject(value)) {\n          _schemas = Object.keys(value).map((key) => ({\n            ...schema.eachSchema,\n            name: key,\n          }));\n        }\n\n        if (isSync) {\n          checkSchemas(_schemas, realNamePath).then();\n        } else {\n          await checkSchemas(_schemas, realNamePath);\n        }\n      }\n    }\n\n    // 检测一组schema\n    async function checkSchemas(_schemas: Schema[], parentNames: NamePath) {\n      for (const schema of _schemas) {\n        if (isSync) {\n          let needBreak;\n          checkSchema(schema, parentNames, (nb) => (needBreak = nb)).then();\n\n          if (needBreak) break;\n        } else {\n          const needBreak = await checkSchema(schema, parentNames);\n          if (needBreak) break;\n        }\n      }\n    }\n\n    if (isSync) {\n      checkSchema(rootSchema, []).then();\n    } else {\n      await checkSchema(rootSchema, []);\n    }\n\n    const _rejectMeta = rejectMeta.length ? rejectMeta : null;\n\n    if (isSync) {\n      syncCallback?.(_rejectMeta);\n      return null;\n    }\n\n    if (_rejectMeta) {\n      throw _rejectMeta;\n    }\n  };\n\n  const check: Verify[\"check\"] = (...args) => {\n    let rejectMeta: RejectMeta | null = null;\n    baseCheck(args, (_rejectMeta) => (rejectMeta = _rejectMeta)).then();\n    return rejectMeta;\n  };\n\n  const asyncCheck: Verify[\"asyncCheck\"] = (...args) => {\n    return baseCheck(args) as Promise<void>;\n  };\n\n  return {\n    check,\n    asyncCheck,\n  };\n}\n"],"names":["getNamePathValue","isArray","isFunction","isObject","isString","stringifyNamePath","ensureArray","interpolate","fmtValidator","isErrorTemplateInterpolate","SOURCE_ROOT_NAME","isVerifyEmpty","getCheckApi","conf","verify","baseCheck","args","syncCallback","isSync","source","_rootSchema","_config","rootSchema","rejectMeta","getValueByName","_rejectMeta","checkSchema","schema","parentNames","checkItemSyncCallback","isRootSchema","parentNamePath","namePath","realNamePath","value","name","label","isEmpty","validators","interpolateValues","validator","errorTemplate","meta","result","err","needBreak","_schemas","transform","type","Object","prototype","toString","call","length","values","config","extraMeta","assign","message","trim","push","verifyFirst","checkSchemas","then","eachSchema","map","_","index","String","keys","key","nb","check","asyncCheck"],"mappings":"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"}