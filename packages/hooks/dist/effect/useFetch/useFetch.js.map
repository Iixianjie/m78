{"version":3,"sources":["/Users/lixianjie/project/openSource/m78/packages/hooks/src/effect/useFetch/useFetch.ts"],"sourcesContent":["import { __GLOBAL__, dumpFn, isEmpty, isFunction, isObject } from \"@m78/utils\";\nimport _debounce from \"lodash/debounce\";\nimport _throttle from \"lodash/throttle\";\nimport React, { useEffect } from \"react\";\nimport {\n  useEffectEqual,\n  useFn,\n  useSelf,\n  useSetState,\n  useStorageState,\n  SetStateBase,\n} from \"../../\";\n\nconst GLOBAL = __GLOBAL__ as Window;\n\ninterface UseFetchOptions<Data, Payload> {\n  /** 传递给请求函数的参数, 当发生改变时，会以新值发起调用请求。传递此项时，payload会被忽略。 */\n  param?: Payload;\n  /** [] | 类似useEffect(fn, deps)，当依赖数组内的值发生改变时，会以当前payload进行更新请求, 请勿传入未memo的引用类型值 */\n  deps?: any[];\n  /** false | 只能通过send来手动触发请求 */\n  manual?: boolean;\n  /** 10000 | 超时时间(ms) */\n  timeout?: number;\n  /** true | 只有为true时才会发起请求, 可以用来实现串联请求 */\n  pass?: boolean;\n  /** 初始data */\n  initData?: (() => Data) | Data;\n  /** 初始payload, 在不存在param配置时，作为参数传递给请求方法 */\n  initPayload?: (() => Payload) | Payload;\n  /** 成功回调, 当为更新请求(无参调用send、deps/param等配置发起请求)时，isUpdate为true */\n  onSuccess?: (result: Data, isUpdate: boolean) => void;\n  /** 错误回调, error为请求函数中抛出的错误 */\n  onError?: (error: any) => void;\n  /** 无论成功与否都会调用。在旧的请求被新的请求覆盖掉时, 不会触发。 */\n  onFinish?: () => void;\n  /** 请求超时的回调 */\n  onTimeout?: () => void;\n  /** 用于缓存的key，传递后，会将(payload, data, arg)缓存到session中，下次加载时将读取缓存数据作为初始值 */\n  cacheKey?: string;\n  /** true | 当传入了cacheKey且存在缓存数据时，是否进行swr(stale-while-revalidate)请求 */\n  stale?: boolean;\n  /** 节流间隔时间，传入时，开启节流, 只有初始化时的配置会生效 */\n  throttleInterval?: number;\n  /** 防抖间隔时间，传入时，开启防抖, 只有初始化时的配置会生效, 当存在throttleInterval时，此配置不会生效 */\n  debounceInterval?: number;\n}\n\ninterface UseFetchReturns<Data, Payload> {\n  /** 是否正在请求 */\n  loading: boolean;\n  /** method方法reject时，error为它reject的值。 */\n  error: any;\n  /** 请求超时设置为true */\n  timeout: boolean;\n  /** method方法resolve的值或initData */\n  data: Data;\n  /** 当前用于请求的payload或initPayload */\n  payload: Payload;\n  /** 当前用于请求的param */\n  param: Payload;\n  /** 设置当前的data */\n  setData: SetStateBase<Data>;\n  /** 取消请求 */\n  cancel: () => void;\n  /**\n   * 根据参数类型不同，会有不同效果:\n   * - 带参数: 以新的payload发起请求并设置payload\n   * - 无参数/参数为react合成事件: 以当前参数发起更新请求\n   * - 传入了param配置项: 当存在param配置，一律视为更新并以当前param的值发起更新. 此时，传入的payload会被忽略\n   *\n   * 返回一个promise对象, 请求结果的结果决定其状态\n   * */\n  send: (\n    newPayload?:\n      | Payload\n      | React.SyntheticEvent /* SyntheticEvent是为了直接将send绑定给onClick等时不出现类型错误 */\n  ) => Promise<Data>;\n}\n\n/** 简单的判断是否为合成事件 */\nfunction isSyntheticEvent(arg: any) {\n  if (!arg) return false;\n\n  return (\n    isObject(arg) && \"nativeEvent\" in arg && \"target\" in arg && \"type\" in arg\n  );\n}\n\n/**\n * 以hooks的方式来发起数据请求\n * - <Data> 响应值的类型\n * - <Payload> 参数类型\n * @param method - 获取数据的函数, 其必须返回一个Promise对象, useFetch会根据promise的状态决定请求的结果, 如果此项不为函数时不会走请求流程, 表现与options.pass相似, 可以用来实现简短的串联请求\n * @param options - 请求配置\n * */\nfunction useFetch<Data = any, Payload = any>(\n  method?: any,\n  options = {} as UseFetchOptions<Data, Payload>\n) {\n  const self = useSelf({\n    /** 请求的唯一标示，在每一次请求开始前更新，并作为请求有效性的凭据 */\n    fetchID: 0,\n    /** 完成请求次数 */\n    fetchCount: 0,\n    /** 超时计时器 */\n    timeoutTimer: 0,\n    /** 保持返回对象引用不变 */\n    returnValues: {} as UseFetchReturns<Data, Payload>,\n  });\n\n  const {\n    initData,\n    initPayload,\n    deps = [],\n    param,\n    manual = false,\n    timeout = 10000,\n    onSuccess,\n    onError,\n    onFinish,\n    onTimeout,\n    cacheKey,\n    stale = true,\n    throttleInterval,\n    debounceInterval,\n    pass: aPass = true,\n  } = options;\n\n  const cacheEnable = !!cacheKey;\n\n  const pass = aPass && isFunction(method);\n\n  const [state, setState] = useSetState({\n    loading: !manual && pass,\n    error: undefined as any,\n    timeout: false,\n  });\n\n  // 防止卸载后赋值\n  useEffect(() => {\n    return () => {\n      self.fetchID = 0; // 超时后阻止后续赋值操作\n      self.timeoutTimer && GLOBAL.clearTimeout(self.timeoutTimer);\n    };\n  }, []);\n\n  const [payload, setPayload] = useStorageState(\n    `${cacheKey}_FETCH_PAYLOAD`,\n    initPayload,\n    {\n      disabled: !cacheEnable,\n    }\n  );\n\n  const [data, setData] = useStorageState(`${cacheKey}_FETCH_DATA`, initData, {\n    disabled: !cacheEnable,\n  });\n\n  const fetchHandel = useFn(\n    async function _fetchHandel(args: any, isUpdate = false) {\n      if (!pass) {\n        throw new Error(\"the request has been ignored\");\n      }\n\n      // self.lastFetch = Date.now();\n\n      const cID = Math.random();\n      self.fetchID = cID;\n\n      // 清除上一个计时器\n      self.timeoutTimer && GLOBAL.clearTimeout(self.timeoutTimer);\n      self.timeoutTimer = GLOBAL.setTimeout(() => {\n        cancel();\n        onTimeout?.();\n        setState(getResetState(\"timeout\", true));\n      }, timeout);\n\n      // 记录当前计时器\n      const cTimeoutTimer = self.timeoutTimer;\n\n      // 减少更新次数\n      if (!state.loading) {\n        setState(getResetState(\"loading\", true));\n      }\n\n      try {\n        const res = await method(args);\n        if (cID === self.fetchID) {\n          setData(res);\n          setState(getResetState(\"loading\", false));\n          onSuccess?.(res, isUpdate);\n          return res;\n        }\n      } catch (err) {\n        if (cID === self.fetchID) {\n          setState(getResetState(\"error\", err));\n          onError?.(err);\n          throw err;\n        }\n      } finally {\n        // 清理当前计时器\n        cTimeoutTimer && GLOBAL.clearTimeout(cTimeoutTimer);\n\n        if (cID === self.fetchID) {\n          onFinish?.();\n          self.fetchCount++;\n        }\n      }\n    },\n    (fn) => {\n      if (throttleInterval) {\n        return _throttle(fn, throttleInterval);\n      }\n\n      if (debounceInterval) {\n        return _debounce(fn, debounceInterval);\n      }\n\n      return fn as any;\n    }\n  );\n\n  /** 手动发起请求 */\n  const send = useFn((newPayload?: Payload) => {\n    const isUpdate = isSyntheticEvent(newPayload) || newPayload === undefined;\n    return fetchHandel(getActualPayload(newPayload), isUpdate);\n  });\n\n  /** 监听param改变并执行缓存更新，发起请求 */\n  useEffectEqual(() => {\n    if (!(\"param\" in options)) return;\n    if (self.fetchCount === 0 || manual) return;\n    fetchHandel(getActualPayload(), false).catch(dumpFn); // 走到这里说明参数已经改变了\n  }, [param]);\n\n  /** 一些自动触发请求的操作 */\n  useEffect(() => {\n    if (manual || !pass) return;\n    // 初次请求时，如果有数据且禁用了stale，取消请求\n    if (!stale && self.fetchCount === 0 && !isEmpty(data)) {\n      setState({\n        loading: false,\n      });\n      return;\n    }\n    fetchHandel(getActualPayload(), self.fetchCount !== 0).catch(dumpFn);\n  }, [pass, ...deps]);\n\n  /** 接受可选的新payload，并根据条件返回传递给fetchHandel的参数(使用param或payload) */\n  function getActualPayload(newPayload?: Payload) {\n    // 包含param配置项，使用当前param更新\n    if (\"param\" in options) {\n      return param;\n    }\n\n    // 参数为合成事件或未传，视为更新请求，使用当前payload进行更新请求\n    if (isSyntheticEvent(newPayload) || newPayload === undefined) {\n      return payload;\n    }\n\n    // 包含新的payload，更新payload值并使用新的payload更新请求\n    setPayload(newPayload as Payload); // 同步新的payload\n    return newPayload;\n  }\n\n  /** 返回一个将互斥的状态还原的对象，并通过键值覆盖设置某个值 */\n  function getResetState(key?: string, value?: any) {\n    const resetState: any = {\n      loading: false,\n      error: undefined,\n      timeout: false,\n    };\n\n    if (key) {\n      resetState[key] = value;\n    }\n\n    return resetState;\n  }\n\n  /** 取消请求 */\n  function cancel() {\n    self.fetchID = 0; // 超时后阻止后续赋值操作\n    self.timeoutTimer && GLOBAL.clearTimeout(self.timeoutTimer);\n    setState({\n      loading: false,\n    });\n  }\n\n  return Object.assign(self.returnValues, {\n    ...state,\n    send,\n    data,\n    payload,\n    param,\n    setData,\n    cancel,\n  });\n}\n\nexport { useFetch, UseFetchOptions, UseFetchReturns };\n"],"names":["__GLOBAL__","dumpFn","isEmpty","isFunction","isObject","_debounce","_throttle","React","useEffect","useEffectEqual","useFn","useSelf","useSetState","useStorageState","GLOBAL","isSyntheticEvent","arg","useFetch","method","options","getActualPayload","newPayload","param","undefined","payload","setPayload","getResetState","key","value","resetState","loading","error","timeout","cancel","self","fetchID","timeoutTimer","clearTimeout","setState","fetchCount","returnValues","initData","initPayload","deps","manual","onSuccess","onError","onFinish","onTimeout","cacheKey","stale","throttleInterval","debounceInterval","aPass","pass","cacheEnable","state","disabled","data","setData","fetchHandel","_fetchHandel","args","isUpdate","cID","cTimeoutTimer","res","err","Error","Math","random","setTimeout","fn","send","catch","Object","assign"],"mappings":"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"}